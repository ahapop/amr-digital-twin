"use client";
import { useEffect, useState } from "react";
import { useAppStore } from "@/lib/store";

interface BimDataItem {
  [key: string]: any;
  expressID?: number | string;
  error?: string;
  message?: string;
  loading?: boolean;
}

export default function BimPanel() {
  const { bimBoxEnabled, toggleBimBox, bimPanelData } = useAppStore();

  // Debug: Log state changes
  useEffect(() => {
    console.log("üîß BimPanel state changed:", {
      bimBoxEnabled,
      hasBimPanelData: !!bimPanelData,
      bimPanelData,
    });
  }, [bimBoxEnabled, bimPanelData]);

  // Slide-in style
  const panelWidth = 400;
  const stylePanel: React.CSSProperties = {
    position: "fixed",
    top: 50,
    right: 0,
    width: panelWidth,
    height: "calc(100vh - 50px)",
    background: "#1a212b",
    color: "#fff",
    zIndex: 1200,
    borderLeft: "2px solid #222a35",
    boxShadow: "-3px 0 12px #0005",
    padding: "12px 7px 14px 7px",
    overflowY: "auto",
    fontSize: 13,
    transition: "transform 0.32s cubic-bezier(0.46,1.48,0.46,0.93)",
    transform: bimBoxEnabled
      ? "translateX(0)"
      : `translateX(${panelWidth + 16}px)`,
  };

  if (!bimBoxEnabled) {
    return <div style={stylePanel}></div>;
  }

  // üîß FIX: Helper function ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö error states
  const isError = bimPanelData?.error;
  const isLoading = bimPanelData?.loading;
  const hasValidData =
    bimPanelData &&
    !isError &&
    !isLoading &&
    Object.keys(bimPanelData).length > 0;

  return (
    <div id="bimPanel" style={stylePanel}>
      {/* ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î */}
      <button
        style={{
          position: "absolute",
          top: 8,
          right: 8,
          background: "#333a",
          color: "#fff",
          border: "none",
          fontSize: 16,
          borderRadius: 8,
          padding: "2px 7px",
          cursor: "pointer",
          transition: "background 0.18s",
        }}
        onClick={() => {
          console.log("üîß BIM Panel close button clicked");
          toggleBimBox();
        }}
        title="Close"
        onMouseEnter={(e) => {
          e.currentTarget.style.background = "#555a";
        }}
        onMouseLeave={(e) => {
          e.currentTarget.style.background = "#333a";
        }}
      >
        √ó
      </button>

      <h2
        style={{
          fontSize: 15,
          marginBottom: 8,
          color: "#87e5fc",
          wordBreak: "break-word",
        }}
      >
        BIM information
      </h2>

      <div id="bim-content" style={{ fontSize: 12, paddingRight: 2 }}>
        {/* üîß FIX: Loading State */}
        {isLoading && (
          <div
            style={{
              color: "#87e5fc",
              fontStyle: "italic",
              padding: "20px 0",
              textAlign: "center",
            }}
          >
            <div style={{ marginBottom: "10px" }}>üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</div>
            <div style={{ fontSize: "10px", color: "#666" }}>
              Express ID: {bimPanelData?.expressID}
            </div>
          </div>
        )}

        {/* üîß FIX: Error States */}
        {isError && (
          <div
            style={{
              color: "#ff6b6b",
              padding: "20px 0",
              textAlign: "center",
            }}
          >
            <div style={{ fontSize: "16px", marginBottom: "10px" }}>
              {bimPanelData?.error === "not_found" && "üîç ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}
              {bimPanelData?.error === "api_error" && "‚ö†Ô∏è ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î"}
              {bimPanelData?.error === "network_error" && "üåê ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ"}
            </div>

            <div
              style={{
                color: "#ccc",
                fontSize: "12px",
                marginBottom: "15px",
                lineHeight: "1.4",
              }}
            >
              {bimPanelData?.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• BIM ‡πÑ‡∏î‡πâ"}
            </div>

            <div
              style={{
                fontSize: "10px",
                color: "#666",
                fontFamily: "monospace",
                marginBottom: "15px",
              }}
            >
              Express ID: {bimPanelData?.expressID}
            </div>

            {/* üîß FIX: Suggestions for different error types */}
            <div
              style={{
                fontSize: "11px",
                color: "#999",
                textAlign: "left",
                border: "1px solid #333",
                padding: "10px",
                borderRadius: "5px",
                backgroundColor: "#252525",
              }}
            >
              <strong>‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</strong>
              <br />
              {bimPanelData?.error === "not_found" && (
                <>
                  ‚Ä¢ ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• BIM ‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
                  <br />
                  ‚Ä¢ ‡∏•‡∏≠‡∏á‡∏î‡∏±‡∏ö‡πÄ‡∏ö‡∏¥‡∏•‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏≠‡∏∑‡πà‡∏ô‡πÅ‡∏ó‡∏ô
                  <br />‚Ä¢ ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                </>
              )}
              {bimPanelData?.error === "api_error" && (
                <>
                  ‚Ä¢ ‡∏•‡∏≠‡∏á‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
                  <br />
                  ‚Ä¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                  <br />‚Ä¢ ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö
                </>
              )}
              {bimPanelData?.error === "network_error" && (
                <>
                  ‚Ä¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï
                  <br />
                  ‚Ä¢ ‡∏•‡∏≠‡∏á‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
                  <br />‚Ä¢ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
                </>
              )}
            </div>
          </div>
        )}

        {/* üîß FIX: No Data State (when no data and no error) */}
        {!hasValidData && !isError && !isLoading && (
          <div
            style={{
              color: "#ccc",
              fontStyle: "italic",
              padding: "20px 0",
              textAlign: "center",
            }}
          >
            <div style={{ fontSize: "16px", marginBottom: "10px" }}>
              üìã ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            </div>
            <div style={{ color: "#999", fontSize: "12px" }}>
              ‡∏î‡∏±‡∏ö‡πÄ‡∏ö‡∏¥‡∏•‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡πÉ‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏• 3D
              <br />
              ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• BIM
            </div>
          </div>
        )}

        {/* üîß FIX: Valid Data Display */}
        {hasValidData && (
          <div>
            {Object.entries(bimPanelData).map(([key, value]) => {
              // Skip internal fields
              if (["loading", "error", "message"].includes(key)) {
                return null;
              }

              // ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏´‡πâ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
              let displayValue = String(value);

              // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô JSON object ‡∏´‡∏£‡∏∑‡∏≠ array ‡πÉ‡∏´‡πâ format ‡πÉ‡∏´‡πâ‡∏™‡∏ß‡∏¢
              if (typeof value === "object" && value !== null) {
                try {
                  displayValue = JSON.stringify(value, null, 2);
                } catch (e) {
                  displayValue = String(value);
                }
              }

              // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô string ‡∏ó‡∏µ‡πà‡∏¢‡∏≤‡∏ß‡∏°‡∏≤‡∏Å ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏î‡πÉ‡∏´‡πâ‡∏™‡∏±‡πâ‡∏ô‡∏•‡∏á
              if (typeof value === "string" && value.length > 100) {
                displayValue = value.substring(0, 100) + "...";
              }

              return (
                <div
                  key={key}
                  style={{
                    fontFamily: "monospace",
                    marginBottom: 8,
                    fontSize: 24,
                    padding: "4px 0",
                    borderBottom: "1px solid #333",
                  }}
                >
                  <div
                    style={{
                      color: "#87e5fc",
                      fontWeight: "bold",
                      marginBottom: 2,
                      fontSize: 20,
                    }}
                  >
                    {key}: {displayValue}
                  </div>
                </div>
              );
            })}
          </div>
        )}
      </div>

      {/* Debug info - ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡πÑ‡∏î‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß */}
      {process.env.NODE_ENV === "development" && (
        <div
          style={{
            position: "absolute",
            bottom: 10,
            left: 10,
            right: 10,
            fontSize: 10,
            color: "#666",
            borderTop: "1px solid #333",
            paddingTop: 5,
            fontFamily: "monospace",
          }}
        >
          BIM Enabled: {bimBoxEnabled ? "Yes" : "No"} | Data:{" "}
          {hasValidData
            ? "Valid"
            : isError
            ? "Error"
            : isLoading
            ? "Loading"
            : "None"}{" "}
          | Type: {bimPanelData?.error || "normal"}
        </div>
      )}
    </div>
  );
}
